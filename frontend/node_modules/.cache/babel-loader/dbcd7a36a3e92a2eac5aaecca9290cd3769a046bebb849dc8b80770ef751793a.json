{"ast":null,"code":"var _jsxFileName = \"C:\\\\securetradeplatform\\\\frontend\\\\src\\\\components\\\\TradingInsights.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/TradingInsights.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './AdminDashboard.css'; // Use centralized CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TradingInsights = () => {\n  _s();\n  const [tradingInsights, setTradingInsights] = useState({\n    tradeVolume: [],\n    // Default empty array\n    successRate: [] // Default empty array\n  });\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/analytics/trading-insights').then(response => setTradingInsights(response.data)).catch(error => console.error('Error fetching trading insights:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trading-insights\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Trading Insights\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trade-volume\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Trade Volume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), tradingInsights.tradeVolume.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tradingInsights.tradeVolume.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.asset, \": \", item.volume]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No trade volume data available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-rate\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Success Rate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), tradingInsights.successRate.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tradingInsights.successRate.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.name, \": \", item.value, \"%\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No success rate data available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(TradingInsights, \"c1TXyi8MpXgvEfJm8nf/p/OKSG0=\");\n_c = TradingInsights;\nexport default TradingInsights;\nvar _c;\n$RefreshReg$(_c, \"TradingInsights\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","TradingInsights","_s","tradingInsights","setTradingInsights","tradeVolume","successRate","get","then","response","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","item","index","asset","volume","name","value","_c","$RefreshReg$"],"sources":["C:/securetradeplatform/frontend/src/components/TradingInsights.js"],"sourcesContent":["// frontend/src/components/TradingInsights.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './AdminDashboard.css'; // Use centralized CSS\r\n\r\nconst TradingInsights = () => {\r\n  const [tradingInsights, setTradingInsights] = useState({\r\n    tradeVolume: [], // Default empty array\r\n    successRate: [], // Default empty array\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/api/analytics/trading-insights')\r\n      .then(response => setTradingInsights(response.data))\r\n      .catch(error => console.error('Error fetching trading insights:', error));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"trading-insights\">\r\n      <h2>Trading Insights</h2>\r\n\r\n      {/* Trade Volume */}\r\n      <div className=\"trade-volume\">\r\n        <h3>Trade Volume</h3>\r\n        {tradingInsights.tradeVolume.length > 0 ? (\r\n          <ul>\r\n            {tradingInsights.tradeVolume.map((item, index) => (\r\n              <li key={index}>\r\n                {item.asset}: {item.volume}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>No trade volume data available.</p>\r\n        )}\r\n      </div>\r\n\r\n      {/* Success Rate */}\r\n      <div className=\"success-rate\">\r\n        <h3>Success Rate</h3>\r\n        {tradingInsights.successRate.length > 0 ? (\r\n          <ul>\r\n            {tradingInsights.successRate.map((item, index) => (\r\n              <li key={index}>\r\n                {item.name}: {item.value}%\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>No success rate data available.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TradingInsights;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}