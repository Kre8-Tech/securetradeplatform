{"ast":null,"code":"// frontend/src/components/UserPreferences.js\nimport React,{useState,useEffect}from'react';import axios from'axios';import'./UserPreferences.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UserPreferences=()=>{const[preferences,setPreferences]=useState({theme:'light',notifications:true,language:'en',timezone:'GMT+2'});const[loading,setLoading]=useState(false);const[error,setError]=useState('');const token=localStorage.getItem('token');const role=localStorage.getItem('role');useEffect(()=>{// Fetch user preferences from the backend\nconst fetchPreferences=async()=>{try{const response=await axios.get('http://localhost:5000/api/user/preferences',{headers:{Authorization:`Bearer ${token}`}});setPreferences(response.data);}catch(err){setError('Failed to load preferences.');}};fetchPreferences();},[token]);const handleChange=e=>{const{name,value,type,checked}=e.target;setPreferences({...preferences,[name]:type==='checkbox'?checked:value});};const handleSubmit=async e=>{e.preventDefault();setLoading(true);setError('');try{await axios.post('http://localhost:5000/api/user/preferences',preferences,{headers:{Authorization:`Bearer ${token}`}});alert('Preferences updated successfully!');}catch(err){setError('Failed to update preferences.');}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"user-preferences\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"User Preferences\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Theme:\",/*#__PURE__*/_jsxs(\"select\",{name:\"theme\",value:preferences.theme,onChange:handleChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"light\",children:\"Light\"}),/*#__PURE__*/_jsx(\"option\",{value:\"dark\",children:\"Dark\"})]})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Notifications:\",/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",name:\"notifications\",checked:preferences.notifications,onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Language:\",/*#__PURE__*/_jsxs(\"select\",{name:\"language\",value:preferences.language,onChange:handleChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"en\",children:\"English\"}),/*#__PURE__*/_jsx(\"option\",{value:\"es\",children:\"Spanish\"}),/*#__PURE__*/_jsx(\"option\",{value:\"fr\",children:\"French\"})]})]}),role==='admin'&&/*#__PURE__*/_jsxs(\"label\",{children:[\"Timezone:\",/*#__PURE__*/_jsxs(\"select\",{name:\"timezone\",value:preferences.timezone,onChange:handleChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"GMT+2\",children:\"GMT+2\"}),/*#__PURE__*/_jsx(\"option\",{value:\"GMT+1\",children:\"GMT+1\"}),/*#__PURE__*/_jsx(\"option\",{value:\"GMT\",children:\"GMT\"})]})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,children:loading?'Updating...':'Update Preferences'})]})]});};export default UserPreferences;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","UserPreferences","preferences","setPreferences","theme","notifications","language","timezone","loading","setLoading","error","setError","token","localStorage","getItem","role","fetchPreferences","response","get","headers","Authorization","data","err","handleChange","e","name","value","type","checked","target","handleSubmit","preventDefault","post","alert","className","children","onSubmit","onChange","disabled"],"sources":["C:/securetradeplatform/frontend/src/components/UserPreferences.js"],"sourcesContent":["// frontend/src/components/UserPreferences.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './UserPreferences.css';\r\n\r\nconst UserPreferences = () => {\r\n  const [preferences, setPreferences] = useState({\r\n    theme: 'light',\r\n    notifications: true,\r\n    language: 'en',\r\n    timezone: 'GMT+2',\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const token = localStorage.getItem('token');\r\n  const role = localStorage.getItem('role');\r\n\r\n  useEffect(() => {\r\n    // Fetch user preferences from the backend\r\n    const fetchPreferences = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/user/preferences', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        setPreferences(response.data);\r\n      } catch (err) {\r\n        setError('Failed to load preferences.');\r\n      }\r\n    };\r\n    fetchPreferences();\r\n  }, [token]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setPreferences({\r\n      ...preferences,\r\n      [name]: type === 'checkbox' ? checked : value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      await axios.post('http://localhost:5000/api/user/preferences', preferences, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      alert('Preferences updated successfully!');\r\n    } catch (err) {\r\n      setError('Failed to update preferences.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-preferences\">\r\n      <h1>User Preferences</h1>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Theme:\r\n          <select name=\"theme\" value={preferences.theme} onChange={handleChange}>\r\n            <option value=\"light\">Light</option>\r\n            <option value=\"dark\">Dark</option>\r\n          </select>\r\n        </label>\r\n\r\n        <label>\r\n          Notifications:\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"notifications\"\r\n            checked={preferences.notifications}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Language:\r\n          <select name=\"language\" value={preferences.language} onChange={handleChange}>\r\n            <option value=\"en\">English</option>\r\n            <option value=\"es\">Spanish</option>\r\n            <option value=\"fr\">French</option>\r\n          </select>\r\n        </label>\r\n\r\n        {role === 'admin' && (\r\n          <label>\r\n            Timezone:\r\n            <select name=\"timezone\" value={preferences.timezone} onChange={handleChange}>\r\n              <option value=\"GMT+2\">GMT+2</option>\r\n              <option value=\"GMT+1\">GMT+1</option>\r\n              <option value=\"GMT\">GMT</option>\r\n            </select>\r\n          </label>\r\n        )}\r\n\r\n        <button type=\"submit\" disabled={loading}>\r\n          {loading ? 'Updating...' : 'Update Preferences'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPreferences;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}