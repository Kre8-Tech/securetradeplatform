{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nconst useDashboardData = () => {\n  _s();\n  const [userActivity, setUserActivity] = useState([]);\n  const [transactions, setTransactions] = useState([]);\n  const [whatsNew, setWhatsNew] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchData = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('No token found. Please log in.');\n        setLoading(false);\n        return;\n      }\n\n      // Fetch user activity\n      const activityResponse = await axios.get('/api/user-activity', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setUserActivity(activityResponse.data);\n\n      // Fetch user transactions\n      const transactionsResponse = await axios.get('/api/transactions', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setTransactions(transactionsResponse.data);\n\n      // Fetch \"What's New\" content\n      const whatsNewResponse = await axios.get('/api/whats-new', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setWhatsNew(whatsNewResponse.data);\n    } catch (error) {\n      setError('Failed to fetch data. Please try again later.');\n      console.error('Error fetching data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return {\n    userActivity,\n    transactions,\n    whatsNew,\n    loading,\n    error,\n    fetchData\n  };\n};\n_s(useDashboardData, \"/wl3iKr8gx+oxywbEEDYRrVa5QU=\");\nexport default useDashboardData;","map":{"version":3,"names":["useState","useEffect","axios","useDashboardData","_s","userActivity","setUserActivity","transactions","setTransactions","whatsNew","setWhatsNew","loading","setLoading","error","setError","fetchData","token","localStorage","getItem","activityResponse","get","headers","Authorization","data","transactionsResponse","whatsNewResponse","console"],"sources":["C:/securetradeplatform/frontend/src/components/useDashboardData.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useDashboardData = () => {\r\n  const [userActivity, setUserActivity] = useState([]);\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [whatsNew, setWhatsNew] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        setError('No token found. Please log in.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      // Fetch user activity\r\n      const activityResponse = await axios.get('/api/user-activity', {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      setUserActivity(activityResponse.data);\r\n\r\n      // Fetch user transactions\r\n      const transactionsResponse = await axios.get('/api/transactions', {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      setTransactions(transactionsResponse.data);\r\n\r\n      // Fetch \"What's New\" content\r\n      const whatsNewResponse = await axios.get('/api/whats-new', {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      setWhatsNew(whatsNewResponse.data);\r\n    } catch (error) {\r\n      setError('Failed to fetch data. Please try again later.');\r\n      console.error('Error fetching data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return { userActivity, transactions, whatsNew, loading, error, fetchData };\r\n};\r\n\r\nexport default useDashboardData;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACVF,QAAQ,CAAC,gCAAgC,CAAC;QAC1CF,UAAU,CAAC,KAAK,CAAC;QACjB;MACF;;MAEA;MACA,MAAMO,gBAAgB,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,oBAAoB,EAAE;QAC7DC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUN,KAAK;QAAG;MAC9C,CAAC,CAAC;MACFV,eAAe,CAACa,gBAAgB,CAACI,IAAI,CAAC;;MAEtC;MACA,MAAMC,oBAAoB,GAAG,MAAMtB,KAAK,CAACkB,GAAG,CAAC,mBAAmB,EAAE;QAChEC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUN,KAAK;QAAG;MAC9C,CAAC,CAAC;MACFR,eAAe,CAACgB,oBAAoB,CAACD,IAAI,CAAC;;MAE1C;MACA,MAAME,gBAAgB,GAAG,MAAMvB,KAAK,CAACkB,GAAG,CAAC,gBAAgB,EAAE;QACzDC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUN,KAAK;QAAG;MAC9C,CAAC,CAAC;MACFN,WAAW,CAACe,gBAAgB,CAACF,IAAI,CAAC;IACpC,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdC,QAAQ,CAAC,+CAA+C,CAAC;MACzDY,OAAO,CAACb,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,SAAS;MACRD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDX,SAAS,CAAC,MAAM;IACdc,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEV,YAAY;IAAEE,YAAY;IAAEE,QAAQ;IAAEE,OAAO;IAAEE,KAAK;IAAEE;EAAU,CAAC;AAC5E,CAAC;AAACX,EAAA,CA9CID,gBAAgB;AAgDtB,eAAeA,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}