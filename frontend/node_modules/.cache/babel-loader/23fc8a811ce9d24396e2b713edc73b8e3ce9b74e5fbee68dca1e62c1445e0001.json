{"ast":null,"code":"var _jsxFileName = \"C:\\\\securetradeplatform\\\\frontend\\\\src\\\\components\\\\WhatsNew.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/WhatsNew.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Panel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WhatsNew = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/whats-new', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        console.log('Posts:', response.data); // Log the response\n        // Ensure posts is always an array\n        setPosts(Array.isArray(response.data) ? response.data : []);\n      } catch (err) {\n        console.error('Error fetching posts:', err);\n        setPosts([]); // Fallback to an empty array\n      }\n    };\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"whats-new\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"What's New\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: post.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), \": \", post.message, \" - \", post.date]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(WhatsNew, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = WhatsNew;\nexport default WhatsNew;\nvar _c;\n$RefreshReg$(_c, \"WhatsNew\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","WhatsNew","_s","posts","setPosts","fetchPosts","response","get","headers","Authorization","localStorage","getItem","console","log","data","Array","isArray","err","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","type","message","date","id","_c","$RefreshReg$"],"sources":["C:/securetradeplatform/frontend/src/components/WhatsNew.js"],"sourcesContent":["// frontend/src/components/WhatsNew.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Panel.css';\r\n\r\nconst WhatsNew = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/whats-new', {\r\n          headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\r\n        });\r\n        console.log('Posts:', response.data); // Log the response\r\n        // Ensure posts is always an array\r\n        setPosts(Array.isArray(response.data) ? response.data : []);\r\n      } catch (err) {\r\n        console.error('Error fetching posts:', err);\r\n        setPosts([]); // Fallback to an empty array\r\n      }\r\n    };\r\n\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"whats-new\">\r\n      <h2>What's New</h2>\r\n      <ul>\r\n        {posts.map((post) => (\r\n          <li key={post.id}>\r\n            <strong>{post.type}</strong>: {post.message} - {post.date}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WhatsNew;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,qCAAqC,EAAE;UACtEC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;UAAG;QACtE,CAAC,CAAC;QACFC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAAC;QACtC;QACAV,QAAQ,CAACW,KAAK,CAACC,OAAO,CAACV,QAAQ,CAACQ,IAAI,CAAC,GAAGR,QAAQ,CAACQ,IAAI,GAAG,EAAE,CAAC;MAC7D,CAAC,CAAC,OAAOG,GAAG,EAAE;QACZL,OAAO,CAACM,KAAK,CAAC,uBAAuB,EAAED,GAAG,CAAC;QAC3Cb,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;MAChB;IACF,CAAC;IAEDC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKmB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBpB,OAAA;MAAAoB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBxB,OAAA;MAAAoB,QAAA,EACGjB,KAAK,CAACsB,GAAG,CAAEC,IAAI,iBACd1B,OAAA;QAAAoB,QAAA,gBACEpB,OAAA;UAAAoB,QAAA,EAASM,IAAI,CAACC;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,MAAE,EAACE,IAAI,CAACE,OAAO,EAAC,KAAG,EAACF,IAAI,CAACG,IAAI;MAAA,GADlDH,IAAI,CAACI,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACtB,EAAA,CAjCID,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AAmCd,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}