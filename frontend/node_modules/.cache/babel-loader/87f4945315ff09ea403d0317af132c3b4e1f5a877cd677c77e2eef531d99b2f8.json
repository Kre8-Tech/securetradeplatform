{"ast":null,"code":"var _jsxFileName = \"C:\\\\securetradeplatform\\\\frontend\\\\src\\\\components\\\\TradingInsights.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/TradingInsights.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './TradingInsights.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TradingInsights = () => {\n  _s();\n  const [tradingInsights, setTradingInsights] = useState({\n    tradeVolume: [],\n    successRate: []\n  });\n  useEffect(() => {\n    const fetchTradingInsights = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/analytics/trading-insights', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        console.log('Trading Insights:', response.data); // Log the response\n        setTradingInsights({\n          tradeVolume: response.data.tradeVolume || [],\n          successRate: response.data.successRate || []\n        });\n      } catch (err) {\n        console.error('Error fetching trading insights:', err);\n        setTradingInsights({\n          tradeVolume: [],\n          successRate: []\n        }); // Fallback to empty arrays\n      }\n    };\n    fetchTradingInsights();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trading-insights\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Trading Insights\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Trade Volume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tradingInsights.tradeVolume.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.asset, \": \", item.volume]\n        }, item.asset, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Success Rate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tradingInsights.successRate.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.name, \": \", item.value, \"%\"]\n        }, item.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(TradingInsights, \"WqJ44My8uqgNbc8z3DKQHPPPEvY=\");\n_c = TradingInsights;\nexport default TradingInsights;\nvar _c;\n$RefreshReg$(_c, \"TradingInsights\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","TradingInsights","_s","tradingInsights","setTradingInsights","tradeVolume","successRate","fetchTradingInsights","response","get","headers","Authorization","localStorage","getItem","console","log","data","err","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","asset","volume","name","value","_c","$RefreshReg$"],"sources":["C:/securetradeplatform/frontend/src/components/TradingInsights.js"],"sourcesContent":["// frontend/src/components/TradingInsights.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './TradingInsights.css';\r\n\r\nconst TradingInsights = () => {\r\n  const [tradingInsights, setTradingInsights] = useState({\r\n    tradeVolume: [],\r\n    successRate: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchTradingInsights = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/analytics/trading-insights', {\r\n          headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\r\n        });\r\n        console.log('Trading Insights:', response.data); // Log the response\r\n        setTradingInsights({\r\n          tradeVolume: response.data.tradeVolume || [],\r\n          successRate: response.data.successRate || [],\r\n        });\r\n      } catch (err) {\r\n        console.error('Error fetching trading insights:', err);\r\n        setTradingInsights({\r\n          tradeVolume: [],\r\n          successRate: [],\r\n        }); // Fallback to empty arrays\r\n      }\r\n    };\r\n\r\n    fetchTradingInsights();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"trading-insights\">\r\n      <h2>Trading Insights</h2>\r\n      <div>\r\n        <h3>Trade Volume</h3>\r\n        <ul>\r\n          {tradingInsights.tradeVolume.map((item) => (\r\n            <li key={item.asset}>\r\n              {item.asset}: {item.volume}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div>\r\n        <h3>Success Rate</h3>\r\n        <ul>\r\n          {tradingInsights.successRate.map((item) => (\r\n            <li key={item.name}>\r\n              {item.name}: {item.value}%\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TradingInsights;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}