{"ast":null,"code":"var _jsxFileName = \"C:\\\\securetradeplatform\\\\frontend\\\\src\\\\components\\\\Transactions.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Panel.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Transactions = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const token = localStorage.getItem('token');\n  const role = localStorage.getItem('role');\n  const userId = localStorage.getItem('userId'); // Ensure you store the userId in localStorage during login\n\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/transactions', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setTransactions(response.data);\n      } catch (err) {\n        setError('Failed to load transactions.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTransactions();\n  }, [token]);\n  const handleAddTransaction = async e => {\n    e.preventDefault();\n    // Your existing logic for adding transactions\n  };\n  const updateTransactionStatus = async (id, status) => {\n    try {\n      await axios.patch(`http://localhost:5000/api/transactions/${id}/status`, {\n        status\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setTransactions(transactions.map(tx => tx.id === id ? {\n        ...tx,\n        status\n      } : tx));\n\n      // Send notifications\n      const transaction = transactions.find(tx => tx.id === id);\n      const statusMessage = `Transaction ${transaction.description} is now marked as ${status}.`;\n      await axios.post('http://localhost:5000/api/send-notifications', {\n        creatorEmail: transaction.creatorEmail,\n        creatorPhone: transaction.creatorPhone,\n        otherPartyEmail: transaction.otherPartyEmail,\n        otherPartyPhone: transaction.otherPartyPhone,\n        message: statusMessage\n      });\n      alert(`Transaction marked as ${status}`);\n    } catch (err) {\n      alert('Failed to update transaction status.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), role === 'admin' ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Admin View: All Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"User View: Your Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount (MWK)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Payment Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.paymentMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: role === 'admin' && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => updateTransactionStatus(transaction.id, 'Completed'),\n                children: \"Mark as Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => updateTransactionStatus(transaction.id, 'Failed'),\n                children: \"Mark as Failed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, transaction.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Transactions, \"5jbk8HdePT8SHyzZX04TAttKX7Q=\");\n_c = Transactions;\nexport default Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Transactions","_s","transactions","setTransactions","loading","setLoading","error","setError","token","localStorage","getItem","role","userId","fetchTransactions","response","get","headers","Authorization","data","err","handleAddTransaction","e","preventDefault","updateTransactionStatus","id","status","patch","map","tx","transaction","find","statusMessage","description","post","creatorEmail","creatorPhone","otherPartyEmail","otherPartyPhone","message","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","amount","paymentMode","onClick","_c","$RefreshReg$"],"sources":["C:/securetradeplatform/frontend/src/components/Transactions.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Panel.css';\r\n\r\nconst Transactions = () => {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const token = localStorage.getItem('token');\r\n  const role = localStorage.getItem('role');\r\n  const userId = localStorage.getItem('userId'); // Ensure you store the userId in localStorage during login\r\n\r\n  useEffect(() => {\r\n    const fetchTransactions = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/transactions', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        setTransactions(response.data);\r\n      } catch (err) {\r\n        setError('Failed to load transactions.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchTransactions();\r\n  }, [token]);\r\n\r\n  const handleAddTransaction = async (e) => {\r\n    e.preventDefault();\r\n    // Your existing logic for adding transactions\r\n  };\r\n\r\n  const updateTransactionStatus = async (id, status) => {\r\n    try {\r\n      await axios.patch(`http://localhost:5000/api/transactions/${id}/status`, { status }, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      setTransactions(transactions.map(tx => tx.id === id ? { ...tx, status } : tx));\r\n\r\n      // Send notifications\r\n      const transaction = transactions.find(tx => tx.id === id);\r\n      const statusMessage = `Transaction ${transaction.description} is now marked as ${status}.`;\r\n      await axios.post('http://localhost:5000/api/send-notifications', {\r\n        creatorEmail: transaction.creatorEmail,\r\n        creatorPhone: transaction.creatorPhone,\r\n        otherPartyEmail: transaction.otherPartyEmail,\r\n        otherPartyPhone: transaction.otherPartyPhone,\r\n        message: statusMessage,\r\n      });\r\n\r\n      alert(`Transaction marked as ${status}`);\r\n    } catch (err) {\r\n      alert('Failed to update transaction status.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"panel\">\r\n      <h1>Transactions</h1>\r\n      {role === 'admin' ? (\r\n        <p>Admin View: All Transactions</p>\r\n      ) : (\r\n        <p>User View: Your Transactions</p>\r\n      )}\r\n      <form onSubmit={handleAddTransaction}>\r\n        {/* Your existing form fields */}\r\n      </form>\r\n\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Description</th>\r\n            <th>Amount (MWK)</th>\r\n            <th>Payment Mode</th>\r\n            <th>Status</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {transactions.map((transaction) => (\r\n            <tr key={transaction.id}>\r\n              <td>{transaction.id}</td>\r\n              <td>{transaction.description}</td>\r\n              <td>{transaction.amount}</td>\r\n              <td>{transaction.paymentMode}</td>\r\n              <td>{transaction.status}</td>\r\n              <td>\r\n                {role === 'admin' && (\r\n                  <>\r\n                    <button onClick={() => updateTransactionStatus(transaction.id, 'Completed')}>Mark as Completed</button>\r\n                    <button onClick={() => updateTransactionStatus(transaction.id, 'Failed')}>Mark as Failed</button>\r\n                  </>\r\n                )}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Transactions;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}