{"ast":null,"code":"var _jsxFileName = \"C:\\\\securetradeplatform\\\\frontend\\\\src\\\\components\\\\ProtectedRoute.js\";\n// frontend/src/components/ProtectedRoute.js\nimport React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  role,\n  children\n}) => {\n  const token = localStorage.getItem('token');\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n  try {\n    const decoded = jwtDecode(token);\n    if (role && decoded.role !== role) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/unauthorized\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 14\n      }, this);\n    }\n  } catch (error) {\n    console.error('Error decoding token:', error);\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n  return children || /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 22\n  }, this);\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","Outlet","jwtDecode","jsxDEV","_jsxDEV","ProtectedRoute","role","children","token","localStorage","getItem","to","fileName","_jsxFileName","lineNumber","columnNumber","decoded","error","console","_c","$RefreshReg$"],"sources":["C:/securetradeplatform/frontend/src/components/ProtectedRoute.js"],"sourcesContent":["// frontend/src/components/ProtectedRoute.js\r\nimport React from 'react';\r\nimport { Navigate, Outlet } from 'react-router-dom';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nconst ProtectedRoute = ({ role, children }) => {\r\n  const token = localStorage.getItem('token');\r\n\r\n  if (!token) {\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  try {\r\n    const decoded = jwtDecode(token);\r\n    if (role && decoded.role !== role) {\r\n      return <Navigate to=\"/unauthorized\" />;\r\n    }\r\n  } catch (error) {\r\n    console.error('Error decoding token:', error);\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  return children || <Outlet />;\r\n};\r\n\r\nexport default ProtectedRoute;"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnD,SAASC,SAAS,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,cAAc,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAS,CAAC,KAAK;EAC7C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,IAAI,CAACF,KAAK,EAAE;IACV,oBAAOJ,OAAA,CAACJ,QAAQ;MAACW,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;EAEA,IAAI;IACF,MAAMC,OAAO,GAAGd,SAAS,CAACM,KAAK,CAAC;IAChC,IAAIF,IAAI,IAAIU,OAAO,CAACV,IAAI,KAAKA,IAAI,EAAE;MACjC,oBAAOF,OAAA,CAACJ,QAAQ;QAACW,EAAE,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACxC;EACF,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,oBAAOb,OAAA,CAACJ,QAAQ;MAACW,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;EAEA,OAAOR,QAAQ,iBAAIH,OAAA,CAACH,MAAM;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC/B,CAAC;AAACI,EAAA,GAlBId,cAAc;AAoBpB,eAAeA,cAAc;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}